//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/InputAssets/TouchControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Wallpaper.Input
{
    public partial class @TouchControls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @TouchControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""TouchControls"",
    ""maps"": [
        {
            ""name"": ""Touch"",
            ""id"": ""f2ccfd3c-54cb-417a-8a4b-8469fd7ddf5d"",
            ""actions"": [
                {
                    ""name"": ""PrimaryTouchDelta"",
                    ""type"": ""Value"",
                    ""id"": ""2e23244f-185e-4c6e-ba86-dfc790b84415"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryTouchDelta"",
                    ""type"": ""Value"",
                    ""id"": ""07961f0c-ac1d-439e-a21c-60fbc9a0bfac"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryTouchDown"",
                    ""type"": ""Button"",
                    ""id"": ""ba093ead-804a-4255-8308-0f8ca230730e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryTouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""cf47a06e-9b05-4449-b852-8d9475983d7d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryTouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""666ed7a2-8b8d-4673-b184-a1336bb1fd39"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryTouch"",
                    ""type"": ""Value"",
                    ""id"": ""3d90024b-15a0-4454-b803-38f309d4e445"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryTouchDown"",
                    ""type"": ""Button"",
                    ""id"": ""0e589182-fd41-45e6-9fbd-84223fd5eae1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""91905b0d-8856-4a13-a21c-574b0e4a481a"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""PrimaryTouchDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""591b3594-760c-416b-93c2-2593c44c1ad0"",
                    ""path"": ""<Touchscreen>/touch1/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""SecondaryTouchDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d87fd4a-3f01-4ba6-bd51-4d1996a1ee9b"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""SecondaryTouchDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""024f502a-8cdb-404a-8ab3-add7ce2c1457"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""PrimaryTouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a311353-2a49-4a9b-9f24-d04f56f8cb86"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""SecondaryTouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebf72bfd-e907-4d86-be30-d1f393c4866c"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""PrimaryTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a6729d9-0526-4d58-858c-c80cd9806dbc"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""PrimaryTouchDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MouseWheel"",
            ""id"": ""84a51d45-4543-4f67-bb87-1e255de04966"",
            ""actions"": [
                {
                    ""name"": ""Zoom"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8a55698c-5eff-4385-af4c-86c0fe043479"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7d113ad9-e50b-4114-a972-b0520351196f"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Desktop"",
            ""bindingGroup"": ""Desktop"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Touch
            m_Touch = asset.FindActionMap("Touch", throwIfNotFound: true);
            m_Touch_PrimaryTouchDelta = m_Touch.FindAction("PrimaryTouchDelta", throwIfNotFound: true);
            m_Touch_SecondaryTouchDelta = m_Touch.FindAction("SecondaryTouchDelta", throwIfNotFound: true);
            m_Touch_SecondaryTouchDown = m_Touch.FindAction("SecondaryTouchDown", throwIfNotFound: true);
            m_Touch_PrimaryTouchPosition = m_Touch.FindAction("PrimaryTouchPosition", throwIfNotFound: true);
            m_Touch_SecondaryTouchPosition = m_Touch.FindAction("SecondaryTouchPosition", throwIfNotFound: true);
            m_Touch_PrimaryTouch = m_Touch.FindAction("PrimaryTouch", throwIfNotFound: true);
            m_Touch_PrimaryTouchDown = m_Touch.FindAction("PrimaryTouchDown", throwIfNotFound: true);
            // MouseWheel
            m_MouseWheel = asset.FindActionMap("MouseWheel", throwIfNotFound: true);
            m_MouseWheel_Zoom = m_MouseWheel.FindAction("Zoom", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Touch
        private readonly InputActionMap m_Touch;
        private ITouchActions m_TouchActionsCallbackInterface;
        private readonly InputAction m_Touch_PrimaryTouchDelta;
        private readonly InputAction m_Touch_SecondaryTouchDelta;
        private readonly InputAction m_Touch_SecondaryTouchDown;
        private readonly InputAction m_Touch_PrimaryTouchPosition;
        private readonly InputAction m_Touch_SecondaryTouchPosition;
        private readonly InputAction m_Touch_PrimaryTouch;
        private readonly InputAction m_Touch_PrimaryTouchDown;
        public struct TouchActions
        {
            private @TouchControls m_Wrapper;
            public TouchActions(@TouchControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @PrimaryTouchDelta => m_Wrapper.m_Touch_PrimaryTouchDelta;
            public InputAction @SecondaryTouchDelta => m_Wrapper.m_Touch_SecondaryTouchDelta;
            public InputAction @SecondaryTouchDown => m_Wrapper.m_Touch_SecondaryTouchDown;
            public InputAction @PrimaryTouchPosition => m_Wrapper.m_Touch_PrimaryTouchPosition;
            public InputAction @SecondaryTouchPosition => m_Wrapper.m_Touch_SecondaryTouchPosition;
            public InputAction @PrimaryTouch => m_Wrapper.m_Touch_PrimaryTouch;
            public InputAction @PrimaryTouchDown => m_Wrapper.m_Touch_PrimaryTouchDown;
            public InputActionMap Get() { return m_Wrapper.m_Touch; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(TouchActions set) { return set.Get(); }
            public void SetCallbacks(ITouchActions instance)
            {
                if (m_Wrapper.m_TouchActionsCallbackInterface != null)
                {
                    @PrimaryTouchDelta.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryTouchDelta;
                    @PrimaryTouchDelta.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryTouchDelta;
                    @PrimaryTouchDelta.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryTouchDelta;
                    @SecondaryTouchDelta.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnSecondaryTouchDelta;
                    @SecondaryTouchDelta.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnSecondaryTouchDelta;
                    @SecondaryTouchDelta.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnSecondaryTouchDelta;
                    @SecondaryTouchDown.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnSecondaryTouchDown;
                    @SecondaryTouchDown.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnSecondaryTouchDown;
                    @SecondaryTouchDown.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnSecondaryTouchDown;
                    @PrimaryTouchPosition.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryTouchPosition;
                    @PrimaryTouchPosition.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryTouchPosition;
                    @PrimaryTouchPosition.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryTouchPosition;
                    @SecondaryTouchPosition.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnSecondaryTouchPosition;
                    @SecondaryTouchPosition.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnSecondaryTouchPosition;
                    @SecondaryTouchPosition.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnSecondaryTouchPosition;
                    @PrimaryTouch.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryTouch;
                    @PrimaryTouch.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryTouch;
                    @PrimaryTouch.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryTouch;
                    @PrimaryTouchDown.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryTouchDown;
                    @PrimaryTouchDown.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryTouchDown;
                    @PrimaryTouchDown.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryTouchDown;
                }
                m_Wrapper.m_TouchActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @PrimaryTouchDelta.started += instance.OnPrimaryTouchDelta;
                    @PrimaryTouchDelta.performed += instance.OnPrimaryTouchDelta;
                    @PrimaryTouchDelta.canceled += instance.OnPrimaryTouchDelta;
                    @SecondaryTouchDelta.started += instance.OnSecondaryTouchDelta;
                    @SecondaryTouchDelta.performed += instance.OnSecondaryTouchDelta;
                    @SecondaryTouchDelta.canceled += instance.OnSecondaryTouchDelta;
                    @SecondaryTouchDown.started += instance.OnSecondaryTouchDown;
                    @SecondaryTouchDown.performed += instance.OnSecondaryTouchDown;
                    @SecondaryTouchDown.canceled += instance.OnSecondaryTouchDown;
                    @PrimaryTouchPosition.started += instance.OnPrimaryTouchPosition;
                    @PrimaryTouchPosition.performed += instance.OnPrimaryTouchPosition;
                    @PrimaryTouchPosition.canceled += instance.OnPrimaryTouchPosition;
                    @SecondaryTouchPosition.started += instance.OnSecondaryTouchPosition;
                    @SecondaryTouchPosition.performed += instance.OnSecondaryTouchPosition;
                    @SecondaryTouchPosition.canceled += instance.OnSecondaryTouchPosition;
                    @PrimaryTouch.started += instance.OnPrimaryTouch;
                    @PrimaryTouch.performed += instance.OnPrimaryTouch;
                    @PrimaryTouch.canceled += instance.OnPrimaryTouch;
                    @PrimaryTouchDown.started += instance.OnPrimaryTouchDown;
                    @PrimaryTouchDown.performed += instance.OnPrimaryTouchDown;
                    @PrimaryTouchDown.canceled += instance.OnPrimaryTouchDown;
                }
            }
        }
        public TouchActions @Touch => new TouchActions(this);

        // MouseWheel
        private readonly InputActionMap m_MouseWheel;
        private IMouseWheelActions m_MouseWheelActionsCallbackInterface;
        private readonly InputAction m_MouseWheel_Zoom;
        public struct MouseWheelActions
        {
            private @TouchControls m_Wrapper;
            public MouseWheelActions(@TouchControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Zoom => m_Wrapper.m_MouseWheel_Zoom;
            public InputActionMap Get() { return m_Wrapper.m_MouseWheel; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MouseWheelActions set) { return set.Get(); }
            public void SetCallbacks(IMouseWheelActions instance)
            {
                if (m_Wrapper.m_MouseWheelActionsCallbackInterface != null)
                {
                    @Zoom.started -= m_Wrapper.m_MouseWheelActionsCallbackInterface.OnZoom;
                    @Zoom.performed -= m_Wrapper.m_MouseWheelActionsCallbackInterface.OnZoom;
                    @Zoom.canceled -= m_Wrapper.m_MouseWheelActionsCallbackInterface.OnZoom;
                }
                m_Wrapper.m_MouseWheelActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Zoom.started += instance.OnZoom;
                    @Zoom.performed += instance.OnZoom;
                    @Zoom.canceled += instance.OnZoom;
                }
            }
        }
        public MouseWheelActions @MouseWheel => new MouseWheelActions(this);
        private int m_TouchSchemeIndex = -1;
        public InputControlScheme TouchScheme
        {
            get
            {
                if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
                return asset.controlSchemes[m_TouchSchemeIndex];
            }
        }
        private int m_DesktopSchemeIndex = -1;
        public InputControlScheme DesktopScheme
        {
            get
            {
                if (m_DesktopSchemeIndex == -1) m_DesktopSchemeIndex = asset.FindControlSchemeIndex("Desktop");
                return asset.controlSchemes[m_DesktopSchemeIndex];
            }
        }
        public interface ITouchActions
        {
            void OnPrimaryTouchDelta(InputAction.CallbackContext context);
            void OnSecondaryTouchDelta(InputAction.CallbackContext context);
            void OnSecondaryTouchDown(InputAction.CallbackContext context);
            void OnPrimaryTouchPosition(InputAction.CallbackContext context);
            void OnSecondaryTouchPosition(InputAction.CallbackContext context);
            void OnPrimaryTouch(InputAction.CallbackContext context);
            void OnPrimaryTouchDown(InputAction.CallbackContext context);
        }
        public interface IMouseWheelActions
        {
            void OnZoom(InputAction.CallbackContext context);
        }
    }
}
